#!/usr/bin/env bash
# Usage: tarcrypt [<backup>]
set -e
set -o pipefail

PROGNAME=$(basename "$0")

PREFIX="${TARCRYPT_DIR:-$HOME/.config/${PROGNAME}}"
TAR="${TARCRYPT_TAR:-$(command -v tar 2> /dev/null)}"

GPG_OPTS=("--quiet" "--yes" "--compress-algo=none")
GPG="gpg"
export GPG_TTY="${GPG_TTY:-$(tty 2>/dev/null)}"
command -v gpg2 > /dev/null && GPG="gpg2"
[[ -n $GPG_AGENT_INFO || $GPG == "gpg2" ]] && GPG_OPTS+=("--batch" "--use-agent")

RECIPIENT="${TARCRYPT_RECIPIENT:-}"
if [ -n "$RECIPIENT" ]; then
  GPG_OPTS+=("--recipient ${RECIPIENT}")
else
  GPG_OPTS+=("--default-recipient-self")
fi


abort() {
  echo "$PROGNAME: $1" >&2
  exit 1
}

cleanup() {
  rm -r "$(dirname "$1")"
}

# No options given. Just print all available backups
if [ $# -eq 0 ]; then
  [ -d "$PREFIX" ] || abort "Could not read config directories '$PREFIX'"
  find "$PREFIX/" -type d -mindepth 1 -maxdepth 1 -print0 | xargs -0 -n1 basename
  exit 0
fi

BACKUP="${!#}"
PRE_SCRIPT="$PREFIX/$BACKUP/pre"
POST_SCRIPT="$PREFIX/$BACKUP/post"

[ ! -f "$PREFIX/$BACKUP/config" ] && abort "Unknown backup '$BACKUP'"

source "$PREFIX/$BACKUP/config" > /dev/null 2>&1

[ -n "$EXCLUDE" ] && excluded=$(printf " --exclude %s" "${EXCLUDE[@]}")

DESTDIR=$(mktemp -d 2>/dev/null || mktemp -d -t "$PROGNAME")
DESTFN="$DESTDIR/$NAME"

trap "cleanup $DESTFN" INT TERM EXIT

[ -x "$PRE_SCRIPT" ] && "$PRE_SCRIPT" "$DESTFN"

"$TAR" -c -z -f - ${excluded[@]} ${FILES[@]} | "$GPG" -e -o "$DESTFN" "${GPG_OPTS[@]}"

[ -x "$POST_SCRIPT" ] && "$POST_SCRIPT" "$DESTFN"
