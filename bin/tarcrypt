#!/usr/bin/env bash
# Usage: tarcrypt [<backup>]
set -eu
set -o pipefail

PROGNAME="$(basename $0)"

PREFIX="${TARCRYPT_DIR:-$HOME/.config/${PROGNAME}}"
TAR="${TARCRYPT_TAR=$(command -v tar 2> /dev/null)}"


abort() {
  echo "$PROGNAME: $1" >&2
  exit 1
}

cleanup() {
  rm -r "$(dirname $1)"
}

# No options given. Just print all available backups
if [ $# -eq 0 ]; then
  find "$PREFIX/" -type d -maxdepth 1 | sed 1d | xargs basename
  exit 0
fi

BACKUP="${!#}"
PRE_SCRIPT="$PREFIX/$BACKUP/pre"
POST_SCRIPT="$PREFIX/$BACKUP/post"

[ ! -f "$PREFIX/$BACKUP/config" ] && abort "Unknown backup '$BACKUP'"

source "$PREFIX/$BACKUP/config" > /dev/null 2>&1

[ -n "$EXCLUDE" ] && exclude=$(printf " --exclude %s" "${EXCLUDE[@]}")

DESTDIR=$(mktemp -d 2>/dev/null || mktemp -d -t $PROGNAME)
DESTFN="$DESTDIR/$NAME"

trap "cleanup $DESTFN" INT TERM EXIT

[ -x $PRE_SCRIPT ] && $PRE_SCRIPT "$DESTFN"

$TAR -c -z -f - ${exclude[@]} ${FILES[@]} | gpg -e -o "$DESTFN"

[ -x $POST_SCRIPT ] && $POST_SCRIPT "$DESTFN"
